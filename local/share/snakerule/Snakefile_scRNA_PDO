ROOT="/mnt/trcanmed/snaketree/prj"
TMM="../tmm.tsv.gz"
METADATA=ROOT+"/RNASeq_biod_metadata/dataset/july2020_starOK/selected_metadata_annot_final_nolinfo_nooutlier"
COUNTS=ROOT+"/RNASeq_biod_metadata/dataset/july2020_starOK/merged_hs_mm.tsv.gz"
WANTED_SAMPLES=ROOT+"/DE_RNASeq/local/share/data/PDO_scRNA"

rule wanted:
	output: "wanted"
	shell:
		"""
		 echo -e "LMO_cetuxi_72h_NT\\nLMO_cetuxi_72h\\nLMO_cetuxi_72h_NT.1\\nLMO_cetuxi_72h.1" > {output}
		"""

rule selection:
    input: metadata=METADATA, types="wanted", samples=WANTED_SAMPLES
    output: metadata="selected_metadata.tsv"
    shell:
        """
            head -n 1 {input.metadata} | cut -f 1,6,7 > {output.metadata}

            sed 1d {input.metadata} | filter_1col 7 {input.types} | cut -f 1,6,7 \\
            | bawk '{{print substr($1,0,7),$1,$2,$3}}' | filter_1col 1 {input.samples} | cut -f 1 --complement >> {output.metadata}
        """

rule select_wanted_tmm:
    input: counts="../tmm.tsv.gz", metadata="selected_metadata.tsv"
    output: counts="selected_matrix_tmm.tsv.gz"
    shell:
        """
            cat <(echo Geneid) <(cut -f 1 {input.metadata} | sed 1d) > {output.counts}.tmp
            zcat {input.counts} | bawk 'NR==1{{print "Geneid",$0}} NR!=1{{print $0}}'| transpose | filter_1col 1 {output.counts}.tmp | transpose | sed 's/H_//1' | gzip > {output.counts}            
            rm {output.counts}.tmp
        """

rule select_wanted_counts:
    input: counts=COUNTS, metadata="selected_metadata.tsv"
    output: counts="selected_matrix_counts.tsv.gz"
    shell:
        """
            cat <(echo Geneid) <(cut -f 1 {input.metadata} | sed 1d) > {output.counts}.tmp
            zcat {input.counts} | transpose | filter_1col 1 {output.counts}.tmp | transpose  | gzip > {output.counts}            
            rm {output.counts}.tmp
            
        """

## fixing header for ease of use of collaborators
rule fix_header:
    input: matrix='selected_matrix_{what}.tsv.gz', meta="selected_metadata.tsv"
    output: hmat='selected_hmatrix_{what}.tsv.gz'
    script: '../../../local/src/from_meta_matrix_to_headeredmat.R'
