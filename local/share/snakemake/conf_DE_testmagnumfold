import os
def find_prj_root(path=os.getcwd()):
	if os.path.isfile(os.path.join(path,".PRJ_ROOT")):
		return path
	else:
		if path:
			return find_prj_root(os.path.dirname(path))
		else:
			raise Exception("Can not find the PRJ_ROOT directory")


PRJ_ROOT=find_prj_root()
ROOT=os.getenv('SNAKE_ROOT')                                                    

# was test_deg_magnum but we rename it to deg_magnum - 16/03/22 removed results
# and switched this to work on whole set, rather than on test only
NAME="test_deg_magnum"
DATA=PRJ_ROOT+"/local/share/data/"
BIN_DIR=PRJ_ROOT+"/local/bin"
SRC_DIR=PRJ_ROOT+"/local/src"

BIT_DIR=ROOT+'/prj/RNASeq_biod_metadata/dataset/july2020_starOK'

COUNTS=BIT_DIR+"/merged_hs_mm.tsv.gz"
#COUNTS="counts.tsv.gz"
GENE_LEN=BIT_DIR+"/gene_len"
META1=ROOT+"/prj/magnum/dataset/de_tt/0_test_samplesheet.tsv"
META2=ROOT+"/prj/magnum/dataset/de_tt/0_train_samplesheet.tsv"
###
DESIGN="~batch+response"
SPECIES="H" # if all do not filter, otherwise keep all genes that starts with 'SPECIES_'
MINC=5
MINSAMPLES=2

FILTERSAMPLES="yes" #  if yes keeps only samples in samples_data

GSEA_PATHWAYS=PRJ_ROOT+"/local/share/data/gsea/Hallmark_curated_hs_symbol.RData"
GSEA_PATHWAYS_NOTHALL=PRJ_ROOT+"/local/share/data/gsea/Not_hallmark_hs_entrez.RData"
GSEA=PRJ_ROOT+"/local/src/gsea.R"

#rule rename_cols:
#    input: matrix=COUNTS_PRE, meta=META
#    output: hmat=COUNTS
#    script: SRC_DIR+'/rename_columns.R'

rule samples_data:
    input: meta1=META1, meta2=META2
    output: "samples_data"
    shell:
        """
		cat {input.meta1} > {output}
		sed 1d {input.meta2} >> {output}
        """

LFC=0.5849625 # 1.5 FC
CORES=6
PVAL=0.05

DEBUG="yes"
MARKER=""
MEDA_DIR=""
SELECTED=""
SELECTED2=""
MEDA_BASALI=''
METASAFE=''

PROM='/scratch/trcanmed/RNASeq_biod_metadata/dataset/july2020_starOK/1500_500_tss.tsv'
rule select_promoters:
	input: bed_prom=PROM, deg= 'response_cutoff0.05-ORSD.vs.PD.deseq2.tsv'
	output: up="up_promoters_deg.bed", down="down_promoters_deg.bed"
	shell:
		"""
			sed 1d {input.deg} | bawk '$3 > 0.58 && $7 < 0.01 {{print $1}}' > {output.up}.tmp
			sed 1d {input.deg} | bawk '$3 < -0.58 && $7 < 0.01 {{print $1}}' > {output.down}.tmp
			filter_1col 4 {output.up}.tmp < {input.bed_prom} > {output.up}
			filter_1col 4 {output.down}.tmp < {input.bed_prom} > {output.down}
			rm {output.up}.tmp {output.down}.tmp
		"""


rule sign_bis:
    input: "{what}_cutoff{alpha}-{nom}.vs.{den}.deseq2.tsv"
    output: "{what}_cutoff{alpha}-{nom}.vs.{den}.deseq2bis_sign.tsv"
    shell:
        """
            bawk '$7<0.05' {input} | bawk 'NR==1{{print "gene",$0}}NR!=1{{print $0}}'  | cut -f 1,2,3,4,7  | sed s'/H_//1'  > {output}
        """

rule select_annote_bis:
    input: "{what}_cutoff{alpha}-{nom}.vs.{den}.deseq2_sign.tsv"
    output: "{what}_cutoff{alpha}-{nom}.vs.{den}.deseq2bis_sign_genedesc.tsv"
    params: tool=BIN_DIR+"/add_description"
    shell:
        """
            {params.tool} -d -i {input} -o {output} -t GENENAME -f SYMBOL -n 1
        """

rule xlsx_deg:
    input: "response_cutoff0.05-ORSD.vs.PD.deseq2bis_sign_genedesc.tsv"
    output: "Suppl_table_XXX1_DEG.xlsx"
    shell: "tsv_to_xls -i {input} -s DEG -o {output}"
    

rule xlsx_gsea:
    input: H="GSEA_results_H_response_cutoff0.05-ORSD.vs.PD.tsv", C2="GSEA_results_C2_response_cutoff0.05-ORSD.vs.PD.tsv"
    output: "Suppl_table_XXX2_gsea.xlsx"
    shell: "tsv_to_xls -i {input.H},{input.C2} -s Hallmarks,C2 -o {output}"
