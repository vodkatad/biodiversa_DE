import os
def find_prj_root(path=os.getcwd()):
	if os.path.isfile(os.path.join(path,".PRJ_ROOT")):
		return path
	else:
		if path:
			return find_prj_root(os.path.dirname(path))
		else:
			raise Exception("Can not find the PRJ_ROOT directory")


PRJ_ROOT=find_prj_root()
ROOT= os.getenv('SNAKE_ROOT')
                                                    
NAME="TCF7L2 deg"
DATA=PRJ_ROOT+"/local/share/data/"+NAME
BIN_DIR=PRJ_ROOT+"/local/bin"
SRC_DIR=PRJ_ROOT+"/local/src"
BASE_DATA=PRJ_ROOT+"/local/share/data"
#BIT_DIR='/mnt/trcanmed/snaketree/prj/RNASeq_biod_metadata/dataset/july2020_starOK'
BIT_DIR='/scratch/trcanmed/RNASeq_biod_metadata/dataset/july2020_starOK'

COUNTS=BIT_DIR+"/merged_hs_mm.tsv.gz"
GENE_LEN=BIT_DIR+"/gene_len"
###
#DESIGN="~batch+time+treat"
DESIGN="~batch+type"
SPECIES="H" # if all do not filter, otherwise keep all genes that starts with 'SPECIES_'
MINC=5
MINSAMPLES=2

FILTERSAMPLES="yes" #  if yes keeps only samples in samples_data # WTF :(

#> library(fgsea)
#Loading required package: Rcpp
#> p1 <- gmtPathways("c5.bp.v7.0.symbols.gmt")
#> pathways <- list(p1)
#> save(pathways, file="bp_hs_symbol.RData")
GSEA_PATHWAYS=PRJ_ROOT+"/local/share/data/gsea/Hallmark_curated_hs_symbol.RData"
GSEA_PATHWAYS_NOTHALL=PRJ_ROOT+"/local/share/data/gsea/Not_hallmark_hs_entrez.RData"
GSEA=PRJ_ROOT+"/local/src/gsea.R"
#GSEA_INPUT=PRJ_ROOT+"/local/src/gsea_input_from_cr.R"
#GSEA_XLS=PRJ_ROOT+"/local/src/gsea_genes_signature.R"
PDO_CETUXI=PRJ_ROOT+'/local/share/data/pdo_cetuxi'

# for biodiversa change - in . in metadata
rule wanted:
	output: "wanted"
	shell:
		"""
		 echo -e "LMO_cetuxi_72h_NT\\nLMO_cetuxi_72h" > {output}
		"""

# work on sensible cases only and work on R ones in another dir to substract their 'spurious' DEG
# decided to work separately at 72h and 6w 
SELECTED = "to do Elena check origin of PDO_cetuxi"
#egrassi@godot:/scratch/trcanmed/DE_RNASeq/dataset/Biodiversa_up5starOK_cetuxi_treat_PDO_72h_S$ filter_1col 1 <(cut -f 1 samples_data ) < /scratch/trcanmed/RNASeq_biod_metadata/dataset/july2020_starOK/selected_metadata_annot_final_nolinfo_nooutlier | wc -l
#48
#egrassi@godot:/scratch/trcanmed/DE_RNASeq/dataset/Biodiversa_up5starOK_cetuxi_treat_PDO_72h_S$ wc -l samples_data
#49 samples_data
# also PDO_R are ok (14), PDX_R (56), PDX_S (89)


rule samples_data:
    input: txt = "PDO_co_comp_TCF7L2_ok.xlsx", metadata = "/scratch/trcanmed/RNASeq_biod_metadata/dataset/july2020_starOK/selected_metadata_annot_final_nolinfo_nooutlier"
    output: meta="samples_data"
    script: SRC_DIR+"/samples_deg_tcf7l2.R"

#CRC0166LMX0A05011TUMR05000      CRC0166 1       6w      NT -> this was the first design with everything together
# fixme or was it correct to consider the NT at different times? or we could work separately at 6w and 72h...yes, let's do that. 
# then two separated directories for R and S cases


LFC=0.5849625 # 1.5 FC
#LFC=0
CORES=6
PVAL=0.05

DEBUG="yes"


MARKER='/scratch/trcanmed/DE_RNASeq/local/share/data/marker_genes_lymphoma.txt'
MEDA_DIR="/mnt/trcanmed/snaketree/prj/RNASeq_biod_metadata/local/share/data"
H_MARKER=""
M_MARKER=""
SELECTED=""


CHOSEN='CRC0327,CRC0399,CRC0069,CRC0322,CRC1331,CRC1272,CRC0542,CRC0059'
rule striplots_chosen:
    input: wanted=BASE_DATA+'/{what}', dds="dds.Rdata"
    output: directory("{what}_lineplots_{class}")
    params: tool=BIN_DIR+"/striplots_single_sample_mirated", chosen=CHOSEN
    shell:
        """
            mkdir -p {output}
            {params.tool} {input.wanted} {input.dds} {output} {wildcards.class} {params.chosen}
        """


rule plots_shrink:
    input: counts=COUNTS, metadata="samples_data"
    output: "dds_nobeta.Rdata", "fpkm_nobeta.tsv.gz", "tmm_nobeta.tsv.gz", "vsd_nobeta.tsv.gz"
    params: tool=BIN_DIR+"/deseq2_qc_nobeta", design=DESIGN, prefix=SPECIES, minc=MINC, minsamples=MINSAMPLES, gene_len=GENE_LEN, cores=CORES
    shell:
        """
            {params.tool} {input.counts} {input.metadata} {params.design} {params.prefix} {params.minc} {params.minsamples} {params.gene_len} {output} {params.cores}
        """

rule de_shrink:
    input: "dds_nobeta.Rdata"
    output: tsv="{what}_cutoff{alpha}-{nom}.vs.{den}.deseq2-shrink-{type}.tsv", volcano="{what}_cutoff{alpha}-{nom}.vs.{den}.deseq2-shrink-{type}.pdf"
    params: threads=CORES, alpha="{alpha}", factor="{what}", nom="{nom}", den="{den}", lfc=LFC
    script: SRC_DIR+"/deseq2_diff_shrink.R"

# rule all_go_gsea_heatmap:
#     input: expand("GO_results_type_cutoff0.05-{nom}.vs.{den}_up.tsv", zip, nom = ["LMO_BASALE", "LMX_BASALE", "LMO_BASALE"], den = ["LMH", "LMH", "LMX_BASALE"]), 
#             expand("GO_results_type_cutoff0.05-{nom}.vs.{den}_down.tsv", zip, nom = ["LMO_BASALE", "LMX_BASALE", "LMO_BASALE"], den = ["LMH", "LMH", "LMX_BASALE"]),
#             expand("GSEA_results_H_type_cutoff0.05-{nom}.vs.{den}.tsv", zip, nom = ["LMO_BASALE", "LMX_BASALE", "LMO_BASALE"], den = ["LMH", "LMH", "LMX_BASALE"])
#     output: hm = "heatmap_go_gsea.pdf"
#     script: SRC_DIR+"/pheatmap_diffexpr_list.R"

# ## pheatmap_diffexpr_list is hardcoded for pvalue 0.05, changed momentarly in 0.001, maybe threshold?
# rule all_go_gsea_heatmap_cutoff:
#     input: expand("GO_results_type_cutoff0.05-{nom}.vs.{den}_up.tsv", zip, nom = ["LMO_BASALE", "LMX_BASALE", "LMO_BASALE"], den = ["LMH", "LMH", "LMX_BASALE"]), 
#             expand("GO_results_type_cutoff0.05-{nom}.vs.{den}_down.tsv", zip, nom = ["LMO_BASALE", "LMX_BASALE", "LMO_BASALE"], den = ["LMH", "LMH", "LMX_BASALE"]),
#             expand("GSEA_results_H_type_cutoff0.05-{nom}.vs.{den}.tsv", zip, nom = ["LMO_BASALE", "LMX_BASALE", "LMO_BASALE"], den = ["LMH", "LMH", "LMX_BASALE"])
#     output: hm = "heatmap_go_gsea_0.05.pdf", sign_go_gsea = "significant_go_gsea_0.05.tsv", hm_20 = "heatmap_go_gsea_0.05_subset.pdf", sign_go = "significant_go.tsv"
#     script: SRC_DIR+"/pheatmap_diffexpr_list.R"            

# rule all_go_gsea_excel:
#     input: expand("GO_results_type_cutoff0.05-{nom}.vs.{den}_up.tsv", zip, nom = ["LMO_BASALE", "LMX_BASALE", "LMO_BASALE"], den = ["LMH", "LMH", "LMX_BASALE"]), 
#             expand("GO_results_type_cutoff0.05-{nom}.vs.{den}_down.tsv", zip, nom = ["LMO_BASALE", "LMX_BASALE", "LMO_BASALE"], den = ["LMH", "LMH", "LMX_BASALE"]),
#             expand("GSEA_results_H_type_cutoff0.05-{nom}.vs.{den}.tsv", zip, nom = ["LMO_BASALE", "LMX_BASALE", "LMO_BASALE"], den = ["LMH", "LMH", "LMX_BASALE"])
#     output: sign_go_gsea_xls = "go_gsea_LFC0_cutoff0.05.xlsx", merged_tsv = "go_gsea_LFC0_cutoff0.05.tsv"
#     script: SRC_DIR+"/excel_sign.R" 

rule gsea_sign:
    input: c2 = "GSEA_results_C2_type_cutoff0.05-4Q.vs.1Q.tsv", h = "GSEA_results_H_type_cutoff0.05-4Q.vs.1Q.tsv"
    output: res = "gsea_sign_qvalues.tsv", xls = "gsea_sign_qvalues.xls"
    script: SRC_DIR+"/sign_gsea.R"
